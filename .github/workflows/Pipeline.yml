name: "Pet Clinic GHA cli"

on: 
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
        
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASS }}
          SERVER_ID: ohad_saas
          
      - name: Configure Repos
        run: jf mvnc --server-id-resolve=$SERVER_ID --server-id-deploy=$SERVER_ID --repo-resolve-releases=${{env.MVN_VIRTUAL_RELEASE_REPO}} --repo-deploy-releases=${{env.MVN_VIRTUAL_RELEASE_REPO}} --repo-resolve-snapshots=${{env.MVN_VIRTUAL_SNAPSHOTS_REPO}} --repo-deploy-snapshots=${{env.MVN_VIRTUAL_SNAPSHOTS_REPO}}
      
      - name: Test JFrog CLI
        run: |
          jf c show
          jf rt ping
          jf -v
      
      - name: Test Maven Project
        run: jf mvn clean test
      
      - name: Install Maven Project
        run: jf mvn install -DskipTests
      
      - name: Login to Docker Enviroment
        run: docker login ${{env.DOCKER_REG_SRV}} -u ${{secrets.DOCKER_USER}} -p ${{secrets.JF_ACCESS_TOKEN}}
        
      - name: Build Docker Image
        run: |
          docker build -t ${{env.DOCKER_IMAGE_NAME}} .
          docker tag ${{env.DOCKER_IMAGE_NAME}} ${{env.DOCKER_IMAGE_TAG}}
          #  tag is ${{env.DOCKER_REG_SRV}}/${{env.DOCKER_REG_NAME}}/${{env.DOCKER_IMAGE_NAME}}:latest
          
      - name: Push Docker Image to RT
        run: docker push ${{env.DOCKER_IMAGE_TAG}}
      
      - name: Collect and Publish Build Info
        run: |
          # Collect environment variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          # Publish build info
          jf rt bp
          
      - name: Scan Build
        run: jf bs
          
    
